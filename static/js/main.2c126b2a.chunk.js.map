{"version":3,"sources":["Buttons.js","Inputs.js","Results.js","Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["Buttons","props","className","buttons","map","btn","i","onClick","onClickButton","tipPercentages","Inputs","state","active","keyInput","this","setState","getTipPercentage","type","defaultValue","billTotal","onKeyPress","e","handleKeyPress","disabled","tipTotal","toFixed","el","handleStyleChange","handleTipSelect","Component","Results","parseFloat","isNaN","Number","costPerPerson","btnsValue","Calculator","clickedBtn","percentages","tipPercent","costPP","bind","updateBillTotal","newState","includes","calculateCosts","newTipTotal","newCostPP","newBillTotal","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c126b2a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Buttons =(props) => {\r\n    return (\r\n        <div>\r\n            <ul className='flex-row keypad'>\r\n                {props.buttons.map((btn,i) => {\r\n                    return(\r\n                        <li key={`btn-${i}`}>\r\n                            <button onClick={() => props.onClickButton(i)}>{btn}</button>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Buttons\r\n","import React,{Component} from 'react';\r\n\r\nconst tipPercentages = ['5%', '10%', '15%' , '20%', '25%','30%'];\r\n\r\nclass Inputs extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tactive: 0,\r\n\t\t\tkeyInput: ''\r\n\t\t};\r\n\t\t\r\n\t}\r\n\r\n\thandleStyleChange(i) {\r\n\t\tif(this.state.active === i) {\r\n\t\t\treturn 'selected-tipPerc';\r\n\t\t} else {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t}\r\n\r\n\thandleTipSelect(i) {\r\n\t\tthis.setState({ active: i });\r\n\t\tthis.props.getTipPercentage(i)\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"inputs flex-row\">\r\n\t\t\t\t<div className=\"bill-total flex-col\">\r\n\t\t\t\t\t<span>Bill Total</span>\r\n\t\t\t\t\t<span className='dollar'>$\r\n\t\t\t\t\t<input type=\"text\" defaultValue={this.props.billTotal} onKeyPress={(e) => this.handleKeyPress(e)}  disabled /></span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"tip-total flex-col\">\r\n\t\t\t\t\t<span>Tip Total </span>\r\n\t\t\t\t\t<span>$ {this.props.tipTotal.toFixed(2)}</span>\t\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"tip-percent flex-col\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttipPercentages.map((el, i) => (\r\n\t\t\t\t\t\t\t\t<li className={this.handleStyleChange(i)} key={el} onClick={() => this.handleTipSelect(i)}>\r\n\t\t\t\t\t\t\t\t\t{el}\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t</div>\r\n\t\t)\r\n\r\n\t}\r\n}\r\nexport default Inputs;","import React from 'react';\r\n\r\nconst Results = (props) => {\r\n\tlet tipTotal = parseFloat(props.tipTotal);\r\n\tlet billTotal = parseFloat(props.billTotal);\r\n\tif (isNaN(billTotal)) {\r\n\t\tbillTotal = '';\r\n\t}\r\n\treturn (\r\n\t\t<ul className=\"results flex-col\">\r\n\t\t\t<li className=\"col-2\">\r\n\t\t\t\t<span>Bill  </span>\r\n\t\t\t\t<span>$</span><span>{Number(billTotal).toFixed(1)}</span>\r\n\t\t\t</li>\r\n\t\t\t<li className=\"col-2\">\r\n\t\t\t\t<span>Tip  </span>\r\n\t\t\t\t<span>$</span><span>{Number(tipTotal).toFixed(1)}</span>\r\n\t\t\t</li>\r\n            <li className=\"col-2 \">\r\n\t\t\t\t<span>Your Total Amount </span>\r\n\t\t\t\t<span>$</span><span>{props.costPerPerson.toFixed(1)}</span>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t)\r\n}\r\n\r\nexport default Results;\r\n","import React, { Component } from 'react';\r\nimport \"./Calculator.css\";\r\nimport Buttons from \"./Buttons\";\r\nimport Inputs from \"./Inputs\";\r\nimport Results from \"./Results\";\r\nconst btnsValue = [9,8,7,6,5,4,3,2,1,'.',0,'DEL'];\r\nconst tipPercentages = [.05, .10, .15, .20, .25,.30];\r\n\r\nclass Calculator extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tbuttons: btnsValue,\r\n\t\t\tclickedBtn: '',\r\n\t\t\tbillTotal: '',\r\n\t\t\tpercentages: tipPercentages,\r\n\t\t\ttipPercent: tipPercentages[0],\r\n\t\t\ttipTotal: 0,\r\n\t\t\tcostPP: 0\r\n\t\t};\r\n\r\n\t\tthis.onClickButton = this.onClickButton.bind(this);\r\n\t\tthis.updateBillTotal = this.updateBillTotal.bind(this);\r\n\t\tthis.getTipPercentage = this.getTipPercentage.bind(this);\r\n\t}\r\n\r\n\tonClickButton(i) {\t\t\t\r\n\t\tthis.setState({\r\n\t\t\tclickedBtn: this.state.buttons[i]\r\n\t\t}, function() {\r\n\t\t\tthis.updateBillTotal(i);\r\n\t\t});\t\r\n\t}\r\n\r\n\tupdateBillTotal(i) {\r\n\t\tlet newState;\r\n\r\n\t\tif(this.state.clickedBtn === '.' && this.state.billTotal.includes('.')) {\t\t\r\n\t\t\treturn null;\r\n\t\t}  \r\n\r\n\t\tif(this.state.clickedBtn !== 'DEL') {\r\n\t\t\tnewState = this.state.billTotal + this.state.clickedBtn;\r\n\t\t\tthis.setState({\r\n\t\t\t\tbillTotal: newState\r\n\t\t\t}, function() {\r\n\t\t\t\tthis.calculateCosts();\r\n\t\t\t}\r\n\t\t\t);\r\n\t\t} else{\r\n\t\t\tnewState = '';\r\n\t\t\tthis.setState({\r\n\t\t\t\tbillTotal: newState,\t\t\r\n\t\t\t\ttipTotal: 0,\r\n\t\t\t\tcostPP: 0,\r\n\t\t\t}, function() {\r\n\t\t\t\tthis.calculateCosts();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\tgetTipPercentage(i) {\r\n\t\tlet newState = this.state.percentages[i];\r\n\t\tthis.setState({\r\n\t\t\ttipPercent: newState\r\n\t\t}, function() {\r\n\t\t\tthis.calculateCosts();\r\n\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tcalculateCosts() {\r\n\t\tlet newBillTotal = parseFloat(this.state.billTotal);\r\n\t\tif(!Number.isNaN(newBillTotal)) {\r\n\t\t\tlet newTipTotal, newCostPP;\r\n\t\t\tnewTipTotal = parseFloat(newBillTotal * this.state.tipPercent);\r\n\t\t\tnewCostPP = newBillTotal + newTipTotal; \r\n\t    this.setState({\r\n\t\t\ttipTotal: newTipTotal,\r\n\t\t\tcostPP: newCostPP,\r\n\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Results \r\n\t\t\t\t\tcostPerPerson={this.state.costPP} \r\n\t\t\t\t\tbillTotal={this.state.billTotal}\r\n\t\t\t\t\ttipTotal={this.state.tipTotal} />\r\n\t\t\t\t\t<Inputs \r\n\t\t\t\t\tbillTotal={this.state.billTotal} \r\n\t\t\t\t\ttipTotal={this.state.tipTotal}\r\n\t\t\t\t\tgetTipPercentage={this.getTipPercentage} />\r\n\t\t\t\t<Buttons onClickButton={this.onClickButton} buttons={this.state.buttons} />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Calculator;\r\n","import React from 'react';\nimport './App.css';\nimport Calculator from \"./Calculator\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h3>TIP CALCULATOR</h3>\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}